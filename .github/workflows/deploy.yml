name: MERN App CI-CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'

      # --- 1. EDIT THIS STEP ---
      - name: Build React Client
        run: |
          echo "Building React client..."
          
          # --- CHANGE THIS LINE ---
          # Change 'client' to your React app's folder name.
          # If your React app is in the ROOT of your project (with no subfolder),
          # you can DELETE this 'cd' line entirely.
          cd client 
          
          npm install
          npm run build

      # --- 2. EDIT THIS STEP ---
      - name: Install Server Dependencies
        run: |
          echo "Installing server dependencies..."
          
          # --- CHANGE THIS LINE ---
          # Change 'server' to your Node.js app's folder name.
          # If your server is in the ROOT, DELETE this 'cd' line.
          cd server
          
          npm install --omit=dev # Production dependencies only

      # --- 3. EDIT THIS STEP ---
      - name: Copy built files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          
          # --- CHANGE THIS LINE ---
          # This MUST match the folders from the steps above.
          #
          # Example 1: If your folders are 'frontend' and 'backend':
          #   source: "frontend/build, backend"
          #
          # Example 2: If React is in the root and server is in 'backend':
          #   source: "build, backend"
          #
          # Example 3: If both are in the root (not common for MERN):
          #   source: "build, server.js, package.json, node_modules" 
          #   (This would require changing the 'Install Server' step)
          #
          source: "client/build, server"
          
          target: "/var/www/my-app"
          rm: true 
          
      # --- 4. EDIT THIS STEP ---
      - name: Run post-deploy commands on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            
            # --- CHANGE THIS LINE ---
            # This MUST match your server folder name from Step 2.
            # If your server is in the root, set this to "" (empty string)
            # and update the paths below.
            SERVER_FOLDER_NAME=server
            
            # Create the .env file
            echo "Creating .env file..."
            echo "${{ secrets.DOT_ENV_SERVER }}" > /var/www/my-app/$SERVER_FOLDER_NAME/.env
            
            # Load NVM
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            
            # Navigate to the server directory
            cd /var/www/my-app/$SERVER_FOLDER_NAME
            
            echo "Restarting PM2 application..."
            # Assumes your main server file is 'server.js'
            pm2 restart my-app || pm2 start server.js --name my-app
            pm2 save
            
            echo "Deployment successful!"
