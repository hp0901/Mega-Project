# Name of your workflow
name: MERN App CI-CD Pipeline

# Run this workflow on a push to the 'main' branch
on:
  push:
    branches:
      - main

# Define the deployment job
jobs:
  deploy:
    # Use the latest GitHub-hosted Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out your repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js (same version as your server)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm' # Cache npm dependencies

      # --- FRONTEND BUILD ---
      - name: Build React Client
        run: |
          echo "Building React client..."
          # Assumes your client is in a 'client' folder
          cd client 
          npm install
          npm run build

      # --- BACKEND PREP ---
      - name: Install Server Dependencies
        run: |
          echo "Installing server dependencies..."
          # Assumes your server is in a 'server' folder
          cd server
          npm install --omit=dev # Production dependencies only

      # --- DEPLOY TO EC2 ---
      - name: Copy built files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          # Copy the two folders we need
          source: "client/build, server"
          # This is the destination folder we created on the server
          target: "/var/www/my-app"
          # This deletes old files in the target dir before copying
          rm: true 
          
      # --- RUN COMMANDS ON EC2 ---
      - name: Run post-deploy commands on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Create the .env file from the GitHub Secret
            echo "Creating .env file..."
            echo "${{ secrets.DOT_ENV_SERVER }}" > /var/www/my-app/server/.env
            
            # --- CRITICAL: Load NVM ---
            # We must load NVM so we can use node and pm2
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            # Navigate to the server directory
            cd /var/www/my-app/server
            
            # Start or restart the backend app using pm2
            echo "Restarting PM2 application..."
            pm2 restart my-app || pm2 start server.js --name my-app
            
            # Save the pm2 process list to run on startup
            pm2 save
            
            echo "Deployment successful!"